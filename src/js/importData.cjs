const fs = require('fs');
const path = require('path');
const admin = require('firebase-admin');

// –ü—É—Ç—å –∫ Service Account —Ñ–∞–π–ª—É
const serviceAccountPath = path.resolve(__dirname, '../youoffice-814d4-firebase-adminsdk-fbsvc-e477985391.json');
const serviceAccount = require(serviceAccountPath);


admin.initializeApp({
   credential: admin.credential.cert(serviceAccount)
});
const db = admin.firestore();

// –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å —Ñ–∞–π–ª–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
const productsDirectory = path.resolve(__dirname, '../files/product');

async function importAllData() {
   console.log('–ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –≤ Firestore...');

   let files;
   try {
      // –ß–∏—Ç–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
      files = fs.readdirSync(productsDirectory);
   } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${productsDirectory}:`, error);
      return;
   }

   for (const file of files) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –∏–º–µ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .json
      if (path.extname(file) === '.json') {
         const filePath = path.join(productsDirectory, file);
         let productsData;

         try {
            // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –∏ –ø–∞—Ä—Å–∏–º JSON
            const fileContent = fs.readFileSync(filePath, 'utf8');
            productsData = JSON.parse(fileContent);
         } catch (parseError) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ñ–∞–π–ª–∞ ${file}:`, parseError);
            continue;
         }

         // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ ‚Äî —ç—Ç–æ –º–∞—Å—Å–∏–≤
         if (!Array.isArray(productsData)) {
            console.error(`‚ùå –û–∂–∏–¥–∞–ª—Å—è –º–∞—Å—Å–∏–≤ –≤ —Ñ–∞–π–ª–µ ${file}. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º...`);
            continue;
         }

         // –ö–∞—Ç–µ–≥–æ—Ä–∏—è –±–µ—Ä—ë—Ç—Å—è –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
         const categoryName = path.basename(file, '.json');

         console.log(`üöÄ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ${productsData.length} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ "${file}" –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é "products"...`);
         const batch = db.batch();
         for (const product of productsData) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º 'id' –∏–∑ JSON-—Ñ–∞–π–ª–∞ –∫–∞–∫ ID –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ Firestore
            const docRef = db.collection('products').doc(product.id);
            batch.set(docRef, {
               ...product,
               category: categoryName
            });
         }

         try {
            await batch.commit();
            console.log(`‚úÖ –ò–º–ø–æ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞ "${file}" –∑–∞–≤–µ—Ä—à—ë–Ω.`);
         } catch (commitError) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –∏–∑ —Ñ–∞–π–ª–∞ "${file}":`, commitError);
         }
      }
   }

   console.log('‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã.');
}

importAllData();
